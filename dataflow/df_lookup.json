{
	"name": "df_lookup",
	"properties": {
		"folder": {
			"name": "1.DataFlowTransformations"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "aug_ds_customer_master",
						"type": "DatasetReference"
					},
					"name": "sourceCustomer"
				},
				{
					"dataset": {
						"referenceName": "aug_ds_product_master",
						"type": "DatasetReference"
					},
					"name": "sourceProduct"
				},
				{
					"dataset": {
						"referenceName": "ds_join_sales",
						"type": "DatasetReference"
					},
					"name": "sourceSales"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_new_adls_target",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "lookup1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "union1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerName as string,",
				"          CustomerBucket as string,",
				"          CustomerRegion as string,",
				"          LessThanFullTruckLoad as string,",
				"          YearOnYearVolumeIncrease as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceCustomer",
				"source(output(",
				"          Product as string,",
				"          ProductCategory as string,",
				"          ProductSubCategory as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceProduct",
				"source(output(",
				"          SalesOrder as string,",
				"          OrderDate as string,",
				"          CustomerName as string,",
				"          City as string,",
				"          Country as string,",
				"          Product as string,",
				"          Price as string,",
				"          Qty_Sold as string,",
				"          Qty_Sold_Units as string,",
				"          Amount as string,",
				"          Amount_Currency as string,",
				"          ShipDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceSales",
				"sourceSales, union1 lookup(sourceSales@CustomerName == union1@CustomerName,",
				"     multiple: true,",
				"     broadcast: 'auto')~> lookup1",
				"sourceCustomer filter(CustomerBucket == 'Bucket-1') ~> filter1",
				"lookup1 derive(matched = isMatch()) ~> derivedColumn1",
				"filter1, sourceCustomer union(byName: true)~> union1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}