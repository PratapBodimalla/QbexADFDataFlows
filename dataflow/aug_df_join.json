{
	"name": "aug_df_join",
	"properties": {
		"folder": {
			"name": "1.DataFlowTransformations"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "aug_ds_customer_master",
						"type": "DatasetReference"
					},
					"name": "sourceCustomer"
				},
				{
					"dataset": {
						"referenceName": "aug_ds_product_master",
						"type": "DatasetReference"
					},
					"name": "sourceProduct"
				},
				{
					"dataset": {
						"referenceName": "ds_join_sales",
						"type": "DatasetReference"
					},
					"name": "sourceSales"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_new_adls_target",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "select1"
				},
				{
					"name": "join2"
				},
				{
					"name": "select2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerName as string,",
				"          CustomerBucket as string,",
				"          CustomerRegion as string,",
				"          LessThanFullTruckLoad as string,",
				"          YearOnYearVolumeIncrease as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceCustomer",
				"source(output(",
				"          Product as string,",
				"          ProductCategory as string,",
				"          ProductSubCategory as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceProduct",
				"source(output(",
				"          SalesOrder as string,",
				"          OrderDate as string,",
				"          CustomerName as string,",
				"          City as string,",
				"          Country as string,",
				"          Product as string,",
				"          Price as string,",
				"          Qty_Sold as string,",
				"          Qty_Sold_Units as string,",
				"          Amount as string,",
				"          Amount_Currency as string,",
				"          ShipDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceSales",
				"sourceSales, sourceCustomer join(sourceSales@CustomerName == sourceCustomer@CustomerName,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> join1",
				"join1 select(mapColumn(",
				"          SalesOrder,",
				"          OrderDate,",
				"          CustomerName = sourceSales@CustomerName,",
				"          City,",
				"          Country,",
				"          Product,",
				"          Price,",
				"          Qty_Sold,",
				"          Qty_Sold_Units,",
				"          Amount,",
				"          Amount_Currency,",
				"          ShipDate,",
				"          CustomerBucket",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1, sourceProduct join(select1@Product == sourceProduct@Product,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2 select(mapColumn(",
				"          SalesOrder,",
				"          OrderDate,",
				"          CustomerName,",
				"          City,",
				"          Country,",
				"          Product = select1@Product,",
				"          Price,",
				"          Qty_Sold,",
				"          Qty_Sold_Units,",
				"          Amount,",
				"          Amount_Currency,",
				"          ShipDate,",
				"          CustomerBucket,",
				"          ProductCategory",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}